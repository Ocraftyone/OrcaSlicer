name: Build all (reuseable)

on:
    push:
      branches:
       - main
      paths:
       - 'deps/**'
       - 'src/**'
       - '**/CMakeLists.txt'
       - 'version.inc'
       - 'localization/**'
       - 'resources/**'
       - ".github/workflows/build_all.yml"

    pull_request:
      branches:
       - main
      paths:
       - 'deps/**'
       - 'src/**'
       - '**/CMakeLists.txt'
       - 'version.inc'
       - ".github/workflows/build_all.yml"

    workflow_dispatch: # allows for manual dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
  
jobs:
  check_cache: # determines if there is a cache and outputs variables used in cacheing process
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
          - os: windows-latest
          - os: macos-12
            arch: x86_64
          - os: macos-12
            arch: arm64
    runs-on: ${{ matrix.os }}
    outputs:
      cache-hit: ${{ steps.cache_deps.outputs.cache.cache-hit }}
      json-output: ${{ steps.outputs.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: set outputs
        id: set_outputs
        uses: cloudposse/github-action-matrix-outputs-write@main
        env:
          # helper vars to make more readable
          underscore-arch: ${{ matrix.os == 'macos-12' && '_' || ''}}${{ matrix.os == 'macos-12' && matrix.arch || '' }} # if is macos, make a string that does "_{arch}", else output nothing
          dash-arch: ${{ matrix.os == 'macos-12' && '-' || ''}}${{ matrix.os == 'macos-12' && matrix.arch || '' }} # if is macos, make a string that does "-{arch}", else output nothing
          dep-folder-name: ${{ (matrix.os == 'windows-latest' || matrix.os == 'macos-12') && 'OrcaSlicer_dep' || 'destdir' }}
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.os }}${{ matrix.arch }}
          outputs: |-
            cache-name: ${{ runner.os }}${{ env.dash-arch }}-cache-orcaslicer_deps
            cache-path: ${{ github.workspace }}/deps/build${{ env.underscore-arch }}/${{ env.dep-folder-name }}${{ env.underscore-arch }}
            hash: ${{ hashFiles('deps/**') }}
        
      - name: load check_cache outputs
        id: outputs
        uses: cloudposse/github-action-matrix-outputs-read@main
        with:
          matrix-step-name: check_cache
        
      - name: load cache
        id: cache_deps
        uses: actions/cache@v3
        env:
          vars: ${{ steps.outputs.outputs.result }}
          matrix-key: ${{ matrix.os }}${{ matrix.arch }}
        with:
          path: ${{ fromJson(env.vars).cache-path[env.matrix-key] }}
          key: ${{ fromJson(env.vars).cache-name[env.matrix-key] }}-build-${{ fromJson(env.vars).hash[env.matrix-key] }} # hash of deps folder used to only rebuild if deps are modified
          
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/artifacts
          
      - name: count artifacts
        id: count_artifacts
        run: |
          cd ${{ github.workspace }}/artifacts
          COUNT=$(ls | wc -l)
          echo "count=$COUNT" >> $GITHUB_OUTPUT
          
      - name: delete artifacts
        if: ${{ steps.count_artifacts.outputs.count }} >= 4
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            *
        
  build_deps:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
          - os: windows-latest
          - os: macos-12
            arch: x86_64
          - os: macos-12
            arch: arm64
    needs: [check_cache]
    if: needs.check_cache.outputs.cache-hit != 'true'
    uses: ./.github/workflows/build_deps.yml
    with:
      cache-path: ${{ fromJson(needs.check_cache.outputs.json-output).cache-path[format('{0}{1}', matrix.os, matrix.arch)] }}
      cache-name: ${{ fromJson(needs.check_cache.outputs.json-output).cache-name[format('{0}{1}', matrix.os, matrix.arch)] }}
      hash: ${{ fromJson(needs.check_cache.outputs.json-output).hash[format('{0}{1}', matrix.os, matrix.arch)] }}
      os: ${{ matrix.os }}
      arch: ${{ matrix.arch }}
      
      
  build_orca:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
          - os: windows-latest
          - os: macos-12
            arch: x86_64
          - os: macos-12
            arch: arm64
    needs: [check_cache]
    if: needs.check_cache.outputs.cache-hit == 'true'
    uses: ./.github/workflows/build_orca.yml
    with:
      cache-path: ${{ fromJson(needs.check_cache.outputs.json-output).cache-path[format('{0}{1}', matrix.os, matrix.arch)] }}
      cache-name: ${{ fromJson(needs.check_cache.outputs.json-output).cache-name[format('{0}{1}', matrix.os, matrix.arch)] }}
      hash: ${{ fromJson(needs.check_cache.outputs.json-output).hash[format('{0}{1}', matrix.os, matrix.arch)] }}
      os: ${{ matrix.os }}
      arch: ${{ matrix.arch }}