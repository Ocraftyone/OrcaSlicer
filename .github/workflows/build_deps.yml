# name: Build Deps
name: Build deps

on:
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - 'deps/**'
  #     - .github/workflows/build_deps.yml
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'deps/**'
  #     - .github/workflows/build_deps.yml
  workflow_call:
    inputs:
      cache-path:
        required: true
        type: string
      cache-name:
        required: true
        type: string
      hash:
        required: true
        type: string
      os:
        required: true
        type: string
      arch:
        required: true
        type: string
      build-orca:
        required: false
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_deps: # build deps if needed. if so, build, cache, and upload artifacts
    runs-on: ${{ inputs.os }}
    steps:
        # SETUP
      - name: Checkout
        uses: actions/checkout@v3

      - name: setup dev on Windows
        if: inputs.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.1

      - name: Get the date on Ubuntu and macOS
        if: inputs.os != 'windows-latest'
        id: get-date-unix
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        shell: bash
        
      - name: Get the date on Windows
        if: inputs.os == 'windows-latest'
        id: get-date-windows
        run: echo "date=$(Get-Date -Format 'yyyyMMdd')" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
        shell: pwsh
        
      - name: load cache
        id: cache_deps
        uses: actions/cache@v3
        with:
          path: ${{ inputs.cache-path }}
          key: ${{ inputs.cache-name }}-build-${{ inputs.hash }} # hash of deps folder used to only rebuild if deps are modified

        # BUILD
      - name: Build deps on Windows
        if: inputs.os == 'windows-latest'
        working-directory: ${{ github.workspace }}
        run: |
            choco install strawberryperl
            mkdir ${{ github.workspace }}/deps/build
            mkdir ${{ github.workspace }}/deps/build/OrcaSlicer_dep
            .\build_release_vs2022.bat deps
            .\build_release_vs2022.bat pack
            cd ${{ github.workspace }}/deps/build

      - name: Build deps on Mac
        if: inputs.os == 'macos-12'
        working-directory: ${{ github.workspace }}
        run: |
            brew install cmake git gettext automake
            mkdir -p ${{ github.workspace }}/deps/build_${{ inputs.arch }}
            mkdir -p ${{ github.workspace }}/deps/build_${{ inputs.arch }}/OrcaSlicer_dep_${{ inputs.arch }}
            ./build_release_macos.sh -dp -a ${{ inputs.arch }}

      - name: Build deps on Ubuntu
        if: inputs.os == 'ubuntu-20.04'
        working-directory: ${{ github.workspace }}
        run: |
            sudo apt-get update
            sudo apt-get install -y cmake git g++ build-essential libgl1-mesa-dev m4 \
            libwayland-dev libxkbcommon-dev wayland-protocols extra-cmake-modules pkgconf \
            libglu1-mesa-dev libcairo2-dev libgtk-3-dev libsoup2.4-dev libwebkit2gtk-4.0-dev \
            libgstreamer1.0-dev libgstreamer-plugins-good1.0-dev libgstreamer-plugins-base1.0-dev \
            gstreamer1.0-plugins-bad libosmesa6-dev wget sudo autoconf curl libunwind-dev
            mkdir -p ${{ github.workspace }}/deps/build
            mkdir -p ${{ github.workspace }}/deps/build/destdir
            sudo ./BuildLinux.sh -ur
            sudo chown $USER -R ./
            ./BuildLinux.sh -dr
            cd deps/build
            tar -czvf OrcaSlicer_dep_ubuntu_$(date +"%Y%m%d").tar.gz destdir
            
        # ARTIFACTS
      - name: Upload Dep Mac artifacts
        if: inputs.os == 'macos-12'
        uses: actions/upload-artifact@v3
        with:
          name: OrcaSlicer_dep_mac_${{ inputs.arch }}_${{ env.date }}
          path: ${{ github.workspace }}/deps/build_${{ inputs.arch }}/OrcaSlicer_dep*.tar.gz

      - name: Upload Dep Windows artifacts
        if: inputs.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: OrcaSlicer_dep_win64_${{ env.date }}
          path: ${{ github.workspace }}/deps/build/OrcaSlicer_dep*.zip

      - name: Upload Dep Ubuntu artifacts
        if: inputs.os == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: OrcaSlicer_dep_ubuntu_${{ env.date }}
          path: ${{ github.workspace }}/deps/build/OrcaSlicer_dep_ubuntu_*.tar.gz
          
      - name: Call Build Orca
        if: inputs.build-orca == true
        uses: ./.github/workflows/build_orca.yml
        with:
          cache-path: ${{ inputs.cache-path }}
          cache-name: ${{ inputs.cache-name }}
          hash: ${{ inputs.hash }}
          os: ${{ inputs.os }}
          arch: ${{ inputs.arch }}
          
        
