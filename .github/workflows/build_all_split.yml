name: Build all

on:
    push:
      branches:
       - main
      paths:
       - 'deps/**'
       - 'src/**'
       - '**/CMakeLists.txt'
       - 'version.inc'
       - 'localization/**'
       - 'resources/**'
       - ".github/workflows/build_all.yml"
       - ".github/workflows/build_all.yml"

    pull_request:
      branches:
       - main
      paths:
       - 'deps/**'
       - 'src/**'
       - '**/CMakeLists.txt'
       - 'version.inc'
       - ".github/workflows/build_all.yml"
       - ".github/workflows/build_all.yml"

    workflow_dispatch: # allows for manual dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
  

jobs:
  check_cache: # determines if there is a cache and outputs variables used in cacheing process
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            name: Linux
          - os: windows-latest
            name: Windows
          - os: macos-12
            arch: x86_64
            name: macOS
          - os: macos-12
            arch: arm64
            name: macOS
    runs-on: ubuntu-20.04
    outputs:
      cache-hit: ${{ steps.cache_deps.outputs.cache.cache-hit }}
      cache-name: ${{ steps.set_outputs.outputs.cache-name }}
      cache-path: ${{ steps.set_outputs.outputs.cache-path }}
      hash: ${{ steps.set_outputs.outputs.hash }} # pass on so that it is not recomputed after build dir is created
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: set outputs
        id: set_outputs
        env:
          # helper vars to make more readable
          underscore-arch: ${{ matrix.os == 'macos-12' && '_' || ''}}${{ matrix.os == 'macos-12' && matrix.arch || '' }} # if is macos, make a string that does "_{arch}", else output nothing
          dash-arch: ${{ matrix.os == 'macos-12' && '-' || ''}}${{ matrix.os == 'macos-12' && matrix.arch || '' }} # if is macos, make a string that does "-{arch}", else output nothing
          dep-folder-name: ${{ (matrix.os == 'windows-latest' || matrix.os == 'macos-12') && 'OrcaSlicer_dep' || 'destdir' }}${{ env.underscore-arch }}
          # vars to be outputed
          cache-name: ${{ matrix.name }}${{ env.dash-arch }}-cache-orcaslicer_deps
          cache-path: ${{ github.workspace }}/deps/build${{ env.underscore-arch }}/${{ env.dep-folder-name }}
        # output above vars plus a hash of the original deps folder
        run: |
          echo "cache-name=${{ env.cache-name }}" >> "$GITHUB_OUTPUT"
          echo "cache-path=${{ env.cache-path }}" >> "$GITHUB_OUTPUT"
          echo "hash=${{ hashFiles('deps/**') }}" >> "$GITHUB_OUTPUT"
        
      # doesn't do anyting with cache here. only used to output if there is a cache hit to determine if next job should run
      - name: load cache
        id: cache_deps
        uses: actions/cache@v3
        with:
          path: ${{ steps.set_outputs.outputs.cache-path }}
          key: ${{ steps.set_outputs.outputs.cache-name }}-build-${{ steps.set_outputs.outputs.hash }} # hash of deps folder used to only rebuild if deps are modified
    
  build_deps: # build deps if needed. if so, build, cache, and upload artifacts
    needs: [check_cache]
    if: needs.check_cache.outputs.cache-hit != 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
          - os: windows-latest
          - os: macos-12
            arch: x86_64
          - os: macos-12
            arch: arm64
    runs-on: ${{ matrix.os }}
    env:
      date: #get rid of intellisense error

    steps:
      - name: deploy instance
        uses: ./.github/workflows/build_deps.yml
        with:
          cache-path: ${{ needs.check_cache.outputs.cache-path }}
          cache-name: ${{ needs.check_cache.outputs.cache-name }}
          hash: ${{ needs.check_cache.outputs.hash }}
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
          build-orca: true
          
          
  build_orca:
    needs: [check_cache, build_deps]
    if: needs.check_cache.outputs.cache-hit == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
          - os: windows-latest
          - os: macos-12
            arch: x86_64
          - os: macos-12
            arch: arm64
    runs-on: ${{ matrix.os }}
    env:
      date:
      ver:

    steps:
      - name: deploy instance
        uses: ./.github/workflows/build_orca.yml
        with:
          cache-path: ${{ needs.check_cache.outputs.cache-path }}
          cache-name: ${{ needs.check_cache.outputs.cache-name }}
          hash: ${{ needs.check_cache.outputs.hash }}
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
        
