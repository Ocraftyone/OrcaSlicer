name: Build OrcaSlicer

on: 
    push:
      branches: 
          -master
          - main
      paths:
       - 'src/**'
       - '**/CMakeLists.txt'
       - 'version.inc'
       - 'localization/**'
       - 'resources/**'
       - ".github/workflows/build_orca.yml"

    pull_request:
      branches: 
       - main
       - master
      paths:
       - 'src/**'
       - '**/CMakeLists.txt'
       - 'version.inc'
       - ".github/workflows/build_orca.yml"
 
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_orca:
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-2019
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the version and date on Ubuntu and macOS
        if: matrix.os != 'windows-2019'
        id: get-version-unix
        run: |
          ver=$(grep 'set(SoftFever_VERSION' version.inc | cut -d '"' -f2)
          echo "ver=$ver" >> $GITHUB_ENV
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        shell: bash

      - name: Get the version and date on Windows
        if: matrix.os == 'windows-2019'
        id: get-version-windows
        run: |
          echo "date=$(Get-Date -Format 'yyyyMMdd')" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
          # Extract the version from the file
          $versionContent = Get-Content version.inc -Raw
          if ($versionContent -match 'set\(SoftFever_VERSION "(.*?)"\)') {
              $ver = $matches[1]
          }
          echo "ver=$ver" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
          echo "date: ${{ env.date }} version: $ver"
        shell: pwsh
        
# Windows
      - name: setup MSVC
        if: matrix.os == 'windows-2019'
        uses: microsoft/setup-msbuild@v1.1

      - name: Install nsis
        if: matrix.os == 'windows-2019'
        run: |
          choco install nsis

      - name: download deps
        if: matrix.os == 'windows-2019'
        shell: powershell
        run: '(new-object System.Net.WebClient).DownloadFile("https://github.com/SoftFever/FileSharing/releases/download/4/OrcaSlicer_dep_18Jul2023.zip", "$env:temp\OrcaSlicer_dep_18Jul2023.zip")'

      - name: maker dir
        if: matrix.os == 'windows-2019'
        working-directory: ${{ github.workspace }}
        run: |
          mkdir ${{ github.workspace }}/deps/build
          mkdir ${{ github.workspace }}/deps/build/OrcaSlicer_dep

      - name: extract deps
        if: matrix.os == 'windows-2019'
        working-directory: ${{ github.workspace }}/deps/build
        shell: cmd
        run: '"C:/Program Files/7-Zip/7z.exe" x %temp%\OrcaSlicer_dep_18Jul2023.zip'
      
      # - name: build deps
        # if: matrix.os == 'windows-2019'
        #   id: cache_deps
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: ${{ runner.os }}-cache-orcaslicer_deps
      #   with:
      #     path: ${{ github.workspace }}/deps/build/OrcaSlicer_dep
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}

      # - if: ${{ steps.cache_deps.outputs.cache-hit != 'true' }}
      #   name: build deps
      #   working-directory: ${{ github.workspace }}
      #   continue-on-error: true
      #   run: .\build_release_vs2022.bat deps
    
      # - run:  Get-ChildItem ${{ github.workspace }}/deps/build/ -Exclude OrcaSlicer_dep | Remove-Item -Recurse -Force

      - name: Build slicer Win
        if: matrix.os == 'windows-2019'
        working-directory: ${{ github.workspace }}
        run: .\build_release.bat slicer

      - name: Create installer Win
        if: matrix.os == 'windows-2019'
        working-directory: ${{ github.workspace }}/build
        run: |
          cpack -G NSIS

      # - name: pack app
        # if: matrix.os == 'windows-2019'
        #   working-directory: ${{ github.workspace }}/build
      #   shell: cmd
      #   run: '"C:/Program Files/7-Zip/7z.exe" a -tzip OrcaSlicer_dev_build.zip ${{ github.workspace }}/build/OrcaSlicer'

      - name: Upload artifacts Win zip
        if: matrix.os == 'windows-2019'
        uses: actions/upload-artifact@v3
        with:
          name: OrcaSlicer_Windows_V${{ env.ver }}_portable
          path: ${{ github.workspace }}/build/OrcaSlicer

      - name: Upload artifacts Win installer
        if: matrix.os == 'windows-2019'
        uses: actions/upload-artifact@v3
        with:
          name: OrcaSlicer_Windows_V${{ env.ver }}
          path: ${{ github.workspace }}/build/OrcaSlicer*.exe

